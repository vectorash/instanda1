{
  "swagger": "2.0",
  "info": {
    "version": "v0.1",
    "title": "PackageApi"
  },
  "schemes": [
    "https"
  ],
  "host": "api-test.instanda.com",
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ],
  "paths": {
    "/Test/v0.1/Package16111/NextUpdateToQuoteOrPolicyData": {
      "get": {
        "description": "Instanda has updated a quote or policy.  Returns the next quote or policy from the queue.  In order to guarantee delivery the item at the front of the queue remains there until it is explicitly removed.  If you don’t specify the dequeue items you will be given the same item again the next time you call the method.  To avoid this, retain the QuoteRef and QuoteDate from the previous call and pass it back again.  This will dequeue the item at the top of the queue and return the next item in the queue.",
        "summary": "Transfer updated data",
        "tags": [
          "Access queue"
        ],
        "operationId": "NextUpdateToQuoteOrPolicyData",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "queueIdentifier",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A string to identify the queue.  Any string can be used.  You can pick what string you want to use yourself.  You do not need to ask us to provide this to you.  Allows multiple systems to subscribe to multiple queues."
          },
          {
            "description": "If specified together with the quoteDateToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteRefToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "If specified together with the quoteRefToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteDateToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maxium age of the quote (in days) that should be returned. This parameter will default to 28 if unspecified.",
            "name": "maxAge",
            "in": "query",
            "required": false,
            "type": "number",
            "default": 28
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "202": {
            "description": "Nothing to return"
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/NextQuote": {
      "get": {
        "description": "Instanda has generated a quote.  Returns the next quote from the queue. Once sold, will be removed from this queue automatically.  In order to guarantee delivery the item at the front of the queue remains there until it is explicitly removed.  If you don’t specify the dequeue items you will be given the same item again the next time you call the method.  To avoid this, retain the QuoteRef and QuoteDate from the previous call and pass it back again.  This will dequeue the item at the top of the queue and return the next item in the queue.",
        "summary": "Transfer quote data",
        "tags": [
          "Access queue"
        ],
        "operationId": "NextQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "queueIdentifier",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A string to identify the queue.  Any string can be used.  You can pick what string you want to use yourself.  You do not need to ask us to provide this to you.  Allows multiple systems to subscribe to multiple queues."
          },
          {
            "description": "If specified together with the quoteDateToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteRefToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "If specified together with the quoteRefToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteDateToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maxium age of the quote (in days) that should be returned. This parameter will default to 28 if unspecified.",
            "name": "maxAge",
            "in": "query",
            "required": false,
            "type": "number",
            "default": 28
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "202": {
            "description": "Nothing to return"
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/NextSale": {
      "get": {
        "description": "Instanda has generated a sale.  Returns the next sale from the queue. Quotes that have not been sold will not be returned.  In order to guarantee delivery the item at the front of the queue remains there until it is explicitly removed.  If you don’t specify the dequeue items you will be given the same item again the next time you call the method.  To avoid this, retain the QuoteRef and QuoteDate from the previous call and pass it back again.  This will dequeue the item at the top of the queue and return the next item in the queue.",
        "summary": "Transfer policy data",
        "tags": [
          "Access queue"
        ],
        "operationId": "NextSale",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "queueIdentifier",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A string to identify the queue.  Any string can be used.  You can pick what string you want to use yourself.  You do not need to ask us to provide this to you.  Allows multiple systems to subscribe to multiple queues."
          },
          {
            "description": "If specified together with the quoteDateToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteRefToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "If specified together with the quoteRefToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteDateToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maxium age of the quote (in days) that should be returned. This parameter will default to 28 if unspecified.",
            "name": "maxAge",
            "in": "query",
            "required": false,
            "type": "number",
            "default": 28
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "202": {
            "description": "Nothing to return"
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetQuoteData": {
      "get": {
        "description": "Gets data for a quote",
        "summary": "Get quote data",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetQuoteData",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetPolicyData": {
      "get": {
        "description": "Gets data for a policy",
        "summary": "Get policy data",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetPolicyData",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetSpecificVariablesForQuote": {
      "get": {
        "description": "Get specific variable values for a quote",
        "summary": "Get specific variable values for a quote",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetSpecificVariablesForQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "variableNameList",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A comma separated list of variable names. It will return the values for the populated variables"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "QuoteRef": {
                  "type": "string"
                },
                "Variable1": {
                  "type": "string"
                },
                "VariableN": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Nothing to return"
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetSpecificVariablesForPolicy": {
      "get": {
        "description": "Get specific variable values for a Policy",
        "summary": "Get specific variable values for a policy",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetSpecificVariablesForPolicy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "variableNameList",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A comma separated list of variable names. It will return the values for the populated variables"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "PolicyNumber": {
                  "type": "string"
                },
                "Variable1": {
                  "type": "string"
                },
                "VariableN": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Nothing to return"
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/StartQuote": {
      "put": {
        "description": "Creates a quote record in Instanda.  All fields are optional - Instanda will take the ones provided and ignore others.",
        "summary": "Start a quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "StartQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartQuoteInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda.  A cookie is returned that grants this salesperson access to Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the quote"
                },
                "quoteRef": {
                  "type": "string",
                  "description": "A reference for the data just created"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/TemporaryQuote": {
      "put": {
        "description": "Runs quote calculations, but does not persist the quote.  All fields are optional - Instanda will take the ones provided and ignore others.",
        "summary": "Temporary quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "TemporaryQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateQuoteAndPolicyDataInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/RateQuote": {
      "put": {
        "description": "Creates a quote record in Instanda and runs calculations.  All fields are optional - Instanda will take the ones provided and ignore others.",
        "summary": "Rate a quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "RateQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateQuoteAndPolicyDataInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/UpdateAndRateQuote": {
      "put": {
        "description": "Updates a quote record in Instanda and runs calculations.  All fields are optional - Instanda will take the ones provided and ignore others.",
        "summary": "Update and rate a quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "UpdateAndRateQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateQuoteAndPolicyDataInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          },
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The quoteRef of the quote being updated and rated."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/CreateQuoteOrPolicyData": {
      "put": {
        "description": "Creates a quote or a policy record in Instanda and does not run calculations or document generation. It will validate the variables provided.",
        "summary": "Create Quote or Policy data",
        "tags": [
          "Send data in"
        ],
        "operationId": "CreateQuoteOrPolicyData",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuoteOrPolicyDataInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "policyNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The policy number to be created."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteOrPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/BindQuote": {
      "put": {
        "description": "Creates and buys a policy in Instanda but does not run calculations apart from payment complete calculations. It will validate the variables provided. Only Offline payment type is currently supported.",
        "summary": "Bind Quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "BindQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BindQuoteInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/BindExistingQuote": {
      "put": {
        "description": "Attempts to bind an existing (and hence already validated up to and including quote stage). It will validate any post quote variables provided. Only Offline payment type is currently supported.",
        "summary": "Bind Existing Quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "BindExistingQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BindQuoteInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          },
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The quoteRef of the quote being updated and rated."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/RateAdjustment": {
      "put": {
        "description": "Creates a quote record in Instanda and runs MTA calculations.  It will validate the variables provided.",
        "summary": "Rate Adjustment",
        "tags": [
          "Send data in"
        ],
        "operationId": "RateAdjustment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateQuoteAndPolicyDataInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "policyNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The policy number to be created."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/RateAdjustmentAndBind": {
      "put": {
        "description": "Creates a quote record in Instanda , runs MTA calculations and binds the quote.  It will validate the variables provided. Only Offline payment type is currently supported.",
        "summary": "Rate Adjustment and Bind a quote",
        "tags": [
          "Send data in"
        ],
        "operationId": "RateAdjustmentAndBind",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateQuoteAndPolicyDataInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "policyNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The policy number to be created."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAndPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/StartRenewal": {
      "put": {
        "description": "Creates a renewal quote on an existing policy in Instanda, provided there are no open quotes on the policy. All fields are optional - where no data is provided, Instanda will use the variable value from the expiring policy term.",
        "summary": "Start a renewal quote on an existing policy",
        "tags": [
          "Send data in"
        ],
        "operationId": "StartRenewal",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartRenewalInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          },
          {
            "name": "policyNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The policy number to be renewed."
          },
          {
            "name": "policyStartDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The start date of the renewal to be created."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "SingleUseUrl": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the renewal quote"
                },
                "quoteRef": {
                  "type": "string",
                  "description": "A reference for the renewal just created"
                }
              }
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "errorMessage": {
                    "type": "string"
                  },
                  "exceptionID": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "exceptionID": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/CancelPolicy": {
      "put": {
        "description": "Cancels a policy, running all the cancellation calculations, logic and documents. All fields are mandatory",
        "summary": "Cancel policy",
        "tags": [
          "Send data in"
        ],
        "operationId": "CancelPolicy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cancelPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelPolicyInput"
            }
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be cancelled against"
          },
          {
            "name": "policyNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The policy number to be cancelled."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteOrPolicyDataOutput"
            }
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/StartClaim": {
      "put": {
        "description": "Creates a claim on the system and returns a single-use, time-expired URL that another system can use to access the claim.",
        "summary": "Start claim",
        "tags": [
          "Send data in"
        ],
        "operationId": "StartClaim",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that the claim will be created against."
          },
          {
            "name": "policyNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The policy number that the claim will be created against."
          },
          {
            "name": "claimLossDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The loss date of the claim to be created."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the claim"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/UpdateCompletedClaim": {
      "post": {
        "description": "Update a claim record on the system and returns a single-use, time-expired URL that another system can use to access the claim.",
        "summary": "Update completed claim",
        "tags": [
          "Send data in"
        ],
        "operationId": "UpdateCompletedClaim",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that the claim was created against."
          },
          {
            "name": "claimRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The claim reference of the claim to be updated."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          },
          {
            "name": "claimStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Notified",
              "PendingInfo",
              "PendingInsurer",
              "Accepted",
              "Declined",
              "Closed"
            ],
            "description": "The claim status to update the claim record with."
          },
          {
            "name": "insurerRef",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The claim insurer reference to update the claim record with."
          },
          {
            "name": "claimLossDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The loss date to update the claim record with."
          },
          {
            "name": "claimDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The claim date to update the claim record with."
          },
          {
            "name": "claimType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The claim type to update the claim record with."
          },
          {
            "name": "reserveAmount",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The claim reserve amount to update the claim record with."
          },
          {
            "name": "claimData",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateClaimDataInput"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the view claim page"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/UpdateClaim": {
      "post": {
        "description": "Update a claim on the system and returns a single-use, time-expired URL that another system can use to access the claim. Can additionally update a mapped claim record if present",
        "summary": "Update claim",
        "tags": [
          "Send data in"
        ],
        "operationId": "UpdateClaim",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that the claim was created against."
          },
          {
            "name": "claimRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The reference of the claim to be updated."
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda."
          },
          {
            "name": "claimStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Notified",
              "PendingInfo",
              "PendingInsurer",
              "Accepted",
              "Declined",
              "Closed"
            ],
            "description": "Claim status to update a claim record with. Only required if V1 claims are mapped."
          },
          {
            "name": "insurerRef",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Claim insurer reference to update a claim record with. Only required if V1 claims are mapped."
          },
          {
            "name": "claimLossDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The loss date to update the claim with."
          },
          {
            "name": "claimDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Claim date to update a claim record with. Only required if V1 claims are mapped."
          },
          {
            "name": "claimType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Claim type to update a claim record with. Only required if V1 claims are mapped."
          },
          {
            "name": "reserveAmount",
            "in": "query",
            "required": false,
            "type": "number",
            "default": 0,
            "description": "Claim reserve amount to update a claim record with. This parameter will default to 0 if unspecified. Only required if V1 claims are mapped."
          },
          {
            "name": "claimStage",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Referred",
              "Payment",
              "Paid",
              "Declined"
            ],
            "description": "The claim stage to update the claim with."
          },
          {
            "name": "claimData",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateClaimDataInput"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the view claim page"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/UpdateQuoteOrPolicyData": {
      "post": {
        "description": "Updates the data held in Instanda",
        "summary": "Update data",
        "tags": [
          "Send data in"
        ],
        "operationId": "UpdateQuoteOrPolicyData",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteOrPolicyData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuoteOrPolicyDataInput"
            }
          },
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/RecordPayment": {
      "post": {
        "description": "Record payment<p><i>Note: this feature is only available to clients using our Billing feature. Please contact your account manager to enable Billing.</i></p>",
        "summary": "Record payment",
        "tags": [
          "Record payment"
        ],
        "operationId": "RecordPayment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentRecord",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recordPaymentInput"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "200": {
              "description": "Ok"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/ContinueQuote": {
      "get": {
        "description": "Returns a single-use, time-expired URL that another system can use to access the quote.",
        "summary": "Continue quote",
        "tags": [
          "Get links"
        ],
        "operationId": "ContinueQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The QuoteRef that you want a URL for"
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda.  A cookie is returned that grants this salesperson access to Instanda."
          },
          {
            "name": "targetSaleStage",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AboutToQuickQuote",
              "QuickQuote",
              "AboutToQuote",
              "Quote"
            ],
            "description": "The target sale stage for the single use URL. If the target hasn't been reached yet, the user will be sent to a stage as close as possible. 'Quote' is the default value."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the quote"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/ViewQuote": {
      "get": {
        "description": "Returns a single-use, time-expired URL that another system can use to access the quote.",
        "summary": "View quote",
        "tags": [
          "Get links"
        ],
        "operationId": "ViewQuote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The QuoteRef that you want a URL for"
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda.  A cookie is returned that grants this salesperson access to Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the quote"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/ViewPolicy": {
      "get": {
        "description": "Returns a single-use, time-expired URL that another system can use to access the policy.",
        "summary": "View policy",
        "tags": [
          "Get links"
        ],
        "operationId": "ViewPolicy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The policy number that you want a URL for"
          },
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda.  A cookie is returned that grants this salesperson access to Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the quote"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetSingleSignOnUrl": {
      "get": {
        "description": "Returns a single-use, time-expired URL that another system can use to access agent homepage.",
        "summary": "SingleSignOn",
        "tags": [
          "Get links"
        ],
        "operationId": "GetSingleSignOnUrl",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteDomainName",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "agentsitelive.instanda.com",
              "ashupublicsite"
            ],
            "description": "The site domain name that this quote will be created against and linked-to"
          },
          {
            "name": "salesPersonUserName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The salesperson's user name as defined in Instanda.  A cookie is returned that grants this salesperson access to Instanda."
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "urlSingleUse": {
                  "type": "string",
                  "description": "A single-use URL for accessing the first Instanda page for the quote"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/NextDocumentsReady": {
      "get": {
        "description": "Returns a list of documents for a policy when the entire list has been generated.  In order to guarantee delivery the item at the front of the queue remains there until it is explicitly removed.  If you don’t specify the dequeue items you will be given the same item again the next time you call the method.  To avoid this, retain the QuoteRef and QuoteDate from the previous call and pass it back again.  This will dequeue the item at the top of the queue and return the next item in the queue.",
        "summary": "Get documents",
        "tags": [
          "Access queue"
        ],
        "operationId": "NextDocumentsReady",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "queueIdentifier",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "A string to identify the queue.  Any string can be used.  You can pick what string you want to use yourself.  You do not need to ask us to provide this to you.  Allows multiple systems to subscribe to multiple queues."
          },
          {
            "description": "If specified together with the quoteDateToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteRefToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "If specified together with the quoteRefToDequeue parameter causes the quote with those Quote Ref and Quote Date to be removed from the queue.  This is usually the one you received the previous time you called this method.  The first time you call this method you won't have this information.  It is for subsequent calls only.",
            "name": "quoteDateToDequeue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maxium age of the quote (in days) that should be returned. This parameter will default to 28 if unspecified.",
            "name": "maxAge",
            "in": "query",
            "required": false,
            "type": "number",
            "default": 28
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "QuoteRef": {
                  "type": "string"
                },
                "QuoteDate": {
                  "type": "string"
                },
                "PdfBuilderWithCoverTypes": {
                  "type": "string",
                  "format": "url"
                },
                "Ihr Angebot - Betriebshaftpflichtversicherung (7).pdf": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          },
          "202": {
            "description": "Nothing to return"
          },
          "400": {
            "description": "Bad input",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataField": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetAllDocumentsLinks": {
      "get": {
        "description": "Gets a list with links to all the documents for a quote",
        "summary": "Get documents links",
        "tags": [
          "Get links"
        ],
        "operationId": "GetAllDocumentsLinks",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The quote ref that you want the documents list for"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "Documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "DocumentType": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "DownloadableName": {
                        "type": "string"
                      },
                      "AvailableAtSaleStage": {
                        "type": "string"
                      },
                      "QuoteCurrentSaleStage": {
                        "type": "string"
                      },
                      "HasDisplayCondition": {
                        "type": "boolean"
                      },
                      "DisplayConditionValue": {
                        "type": "boolean"
                      },
                      "Base64DownloadURL": {
                        "type": "string"
                      },
                      "ContentType": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetBase64Document": {
      "get": {
        "description": "Gets a document in Base64 for a quote",
        "summary": "Get document in Base64",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetBase64Document",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The quote ref that you want the document for"
          },
          {
            "name": "downloadableName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The downloadable document name of the document you want"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "DocumentType": {
                  "type": "string"
                },
                "Base64Document": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetAllDocumentsLinksByClaimId": {
      "get": {
        "description": "Gets a list with links to all the documents for a claim",
        "summary": "Get documents links by claim id",
        "tags": [
          "Get links"
        ],
        "operationId": "GetAllDocumentsLinksByClaimId",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "claimId",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "The claim id that you want the documents list for"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "Documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "DocumentType": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "ContentType": {
                        "type": "string"
                      },
                      "DownloadableName": {
                        "type": "string"
                      },
                      "Base64DownloadURL": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetAllClaimsDocumentsLinks": {
      "get": {
        "description": "Gets a list with links to all the claim documents related to a quote",
        "summary": "Get claim documents links",
        "tags": [
          "Get links"
        ],
        "operationId": "GetAllClaimsDocumentsLinks",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The quote ref of the claims that you want the documents list for"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "Documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ClaimId": {
                        "type": "number"
                      },
                      "DocumentType": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "ContentType": {
                        "type": "string"
                      },
                      "DownloadableName": {
                        "type": "string"
                      },
                      "Base64DownloadURL": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetBase64DocumentByClaimId": {
      "get": {
        "description": "Gets a document in Base64 for a claim",
        "summary": "Get document in Base64 by claim id",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetBase64DocumentByClaimId",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "claimId",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "The claim id that you want the document for"
          },
          {
            "name": "downloadableName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The downloadable document name of the document you want"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "DocumentType": {
                  "type": "string"
                },
                "Base64Document": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/GetBase64InvoiceDocument": {
      "get": {
        "description": "Gets a document in Base64 for an invoice<p><i>Note: this feature is only available to clients using our Billing feature. Please contact your account manager to enable Billing.</i></p>",
        "summary": "Get invoice document in Base64",
        "tags": [
          "Get data out"
        ],
        "operationId": "GetBase64InvoiceDocument",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "invoiceRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The invoice reference that you want the document for"
          },
          {
            "name": "downloadableName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The downloadable document name of the document you want"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "DocumentType": {
                  "type": "string"
                },
                "Base64Document": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Test/v0.1/Package16111/UploadExternalDocument": {
      "put": {
        "description": "Uploads a new document to a specific quote",
        "summary": "Upload External Document",
        "tags": [
          "Upload document"
        ],
        "operationId": "UploadExternalDocument",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "quoteRef",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The quote ref that you want to upload the document for"
          },
          {
            "name": "documentReference",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The external document template identifier"
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The file name for the file you are uploading"
          },
          {
            "name": "Content-Length",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The size in bytes of the file you are uploading"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The type of the file you are uploading"
          },
          {
            "name": "FileContent",
            "in": "body",
            "required": true,
            "description": "The raw binary content for the file you are uploading.\nWhen using the endpoint (for example via Postman), this should be the bytes of the whole body content.",
            "schema": {
              "$ref": "#/definitions/UploadExternalDocumentInput"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "200": {
              "description": "Ok"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "dataField": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW-Authenticate": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "StartQuoteInput": {
      "type": "object",
      "properties": {
        "reqdNumberQs1PreQ": {
          "format": "double",
          "type": "number"
        },
        "reqdNumberQs2PreQ": {
          "format": "double",
          "type": "number"
        },
        "hiddenText": {
          "format": "double",
          "type": "number"
        },
        "policyStartDate": {
          "format": "date",
          "type": "string"
        },
        "policyEndDate": {
          "format": "date",
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Country": {
          "type": "string",
          "enum": [
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "KH",
            "CM",
            "CA",
            "CV",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CD",
            "CK",
            "CR",
            "CI",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KP",
            "KR",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SZ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UM",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "Title": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "Colour": {
          "type": "string"
        },
        "Make": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "Registration": {
          "type": "string"
        },
        "YearOfManufacture": {
          "format": "double",
          "type": "number"
        },
        "ABIGroup": {
          "type": "string"
        },
        "DoorPlanCode": {
          "format": "double",
          "type": "number"
        },
        "WheelPlanCode": {
          "type": "string"
        },
        "GrossVehicleWeight": {
          "format": "double",
          "type": "number"
        },
        "EngineCapacity": {
          "format": "double",
          "type": "number"
        },
        "TransmissionCode": {
          "type": "string"
        },
        "NumberQ1": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "PetId": {
                "format": "double",
                "type": "number"
              },
              "PetName": {
                "type": "string"
              },
              "PetDetails": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RateQuoteAndPolicyDataInput": {
      "type": "object",
      "properties": {
        "reqdNumberQs1PreQ": {
          "format": "double",
          "type": "number"
        },
        "reqdNumberQs2PreQ": {
          "format": "double",
          "type": "number"
        },
        "hiddenText": {
          "format": "double",
          "type": "number"
        },
        "policyStartDate": {
          "format": "date",
          "type": "string"
        },
        "policyEndDate": {
          "format": "date",
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Country": {
          "type": "string",
          "enum": [
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "KH",
            "CM",
            "CA",
            "CV",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CD",
            "CK",
            "CR",
            "CI",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KP",
            "KR",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SZ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UM",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "Title": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "primaryEmail": {
          "type": "string"
        },
        "EffectiveChangeDate": {
          "format": "date",
          "type": "string"
        },
        "Colour": {
          "type": "string"
        },
        "Make": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "Registration": {
          "type": "string"
        },
        "YearOfManufacture": {
          "format": "double",
          "type": "number"
        },
        "ABIGroup": {
          "type": "string"
        },
        "DoorPlanCode": {
          "format": "double",
          "type": "number"
        },
        "WheelPlanCode": {
          "type": "string"
        },
        "GrossVehicleWeight": {
          "format": "double",
          "type": "number"
        },
        "EngineCapacity": {
          "format": "double",
          "type": "number"
        },
        "TransmissionCode": {
          "type": "string"
        },
        "NumberQ1": {
          "format": "double",
          "type": "number"
        },
        "SelectedCoverType": {
          "type": "string"
        },
        "PetsMultiItem": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "PetId": {
                "format": "double",
                "type": "number"
              },
              "PetName": {
                "type": "string"
              },
              "PetDetails": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CreateQuoteOrPolicyDataInput": {
      "type": "object",
      "properties": {
        "ABIGroup": {
          "type": "string"
        },
        "AccountHolderName": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AgentCommission": {
          "format": "double",
          "type": "number"
        },
        "AgentDirectToQuoteOnLogin": {
          "type": "boolean"
        },
        "AgentGroupAddress1": {
          "type": "string"
        },
        "AgentGroupAddress2": {
          "type": "string"
        },
        "AgentGroupCountry": {
          "type": "string"
        },
        "AgentGroupCounty": {
          "type": "string"
        },
        "AgentGroupEmail": {
          "type": "string"
        },
        "AgentGroupName": {
          "type": "string"
        },
        "AgentGroupPostcode": {
          "type": "string"
        },
        "AgentGroupRefID": {
          "type": "string"
        },
        "AgentGroupTown": {
          "type": "string"
        },
        "AmountToRefundOffline": {
          "format": "double",
          "type": "number"
        },
        "BankAddress": {
          "type": "string"
        },
        "BankName": {
          "type": "string"
        },
        "BinderIssueDate": {
          "format": "date",
          "type": "string"
        },
        "BoltAltKey": {
          "type": "string"
        },
        "CancellationConfirmedDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationCreatedOnDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationQuoteDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationReason": {
          "type": "string"
        },
        "CancelledDate": {
          "format": "date",
          "type": "string"
        },
        "CancelledQuoteRef": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "ClaimDate": {
          "format": "date",
          "type": "string"
        },
        "ClaimDescription": {
          "type": "string"
        },
        "ClaimInsurerRef": {
          "type": "string"
        },
        "ClaimLossDate": {
          "format": "date",
          "type": "string"
        },
        "ClaimLossType": {
          "type": "string"
        },
        "ClaimOutstanding": {
          "format": "double",
          "type": "number"
        },
        "ClaimPaid": {
          "format": "double",
          "type": "number"
        },
        "ClaimReserve": {
          "format": "double",
          "type": "number"
        },
        "Claims_Count": {
          "format": "double",
          "type": "number"
        },
        "ClaimStatus": {
          "type": "string"
        },
        "CollectionDay": {
          "format": "double",
          "type": "number"
        },
        "Colour": {
          "type": "string"
        },
        "CompanySanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "CompanySanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "CreatedFrom": {
          "type": "string",
          "enum": [
            "Unknown",
            "NewBusiness",
            "DetailChange",
            "Renewal",
            "MTA",
            "SelfRenewal",
            "Cancellation",
            "RenewalLapse"
          ]
        },
        "CreatedOn": {
          "format": "date",
          "type": "string"
        },
        "CustomerRef": {
          "type": "string"
        },
        "DeclineReason": {
          "type": "string"
        },
        "DetailChangedQuoteRef": {
          "type": "string"
        },
        "DocumentGeneratedDate": {
          "format": "date",
          "type": "string"
        },
        "DoorPlanCode": {
          "format": "double",
          "type": "number"
        },
        "EditedQuoteRef": {
          "type": "string"
        },
        "EngineCapacity": {
          "format": "double",
          "type": "number"
        },
        "FailedBoltQuoteCompletionAttempts": {
          "format": "double",
          "type": "number"
        },
        "FinalTotalCost": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionAmount": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionDate": {
          "format": "date",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "GrossVehicleWeight": {
          "format": "double",
          "type": "number"
        },
        "HasDied": {
          "type": "boolean"
        },
        "hiddenText": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "IndividualSanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "IsCancelled": {
          "type": "boolean"
        },
        "IsDetailChange": {
          "type": "boolean"
        },
        "IsMTA": {
          "type": "boolean"
        },
        "IsReinstatement": {
          "type": "boolean"
        },
        "IsRenewal": {
          "type": "boolean"
        },
        "IsRenewalAllowedToLapse": {
          "type": "boolean"
        },
        "LapsedReason": {
          "type": "string"
        },
        "LastKnownClientUserId": {
          "format": "double",
          "type": "number"
        },
        "LastName": {
          "type": "string"
        },
        "LastRecurrentPaymentAmount": {
          "format": "double",
          "type": "number"
        },
        "LastRecurrentPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "LastRecurrentPaymentStatus": {
          "type": "string"
        },
        "Make": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "MTA_COUNT": {
          "format": "double",
          "type": "number"
        },
        "NextBoltQuoteCompletionAttemptDate": {
          "format": "date",
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "NotTakenUpReason": {
          "type": "string"
        },
        "NumberQ1": {
          "format": "double",
          "type": "number"
        },
        "OosMtaPremiumAdjustment": {
          "format": "double",
          "type": "number"
        },
        "OriginalPolicyStartDate": {
          "format": "date",
          "type": "string"
        },
        "OriginalQuoteRef": {
          "type": "string"
        },
        "OriginalReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "OriginalSaleCompletedByAgentGroupName": {
          "type": "string"
        },
        "OriginalSaleCompletedBySalesPersonEmail": {
          "type": "string"
        },
        "OriginalSaleCompletedBySalesPersonName": {
          "type": "string"
        },
        "OriginatedFrom": {
          "type": "string"
        },
        "PaymentStatusAmountDue": {
          "type": "string"
        },
        "PaymentStatusAttemptedOn": {
          "type": "string"
        },
        "PaymentStatusDescription": {
          "type": "string"
        },
        "PaymentType": {
          "type": "string"
        },
        "PetsMultiItem_Count": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem_IndexList": {
          "type": "string"
        },
        "policyEndDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateCreatedDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateEffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateReference": {
          "type": "string"
        },
        "PolicyLatestMandateStatus": {
          "type": "string"
        },
        "PolicyNumber": {
          "type": "string"
        },
        "PolicyNumberSuffixed": {
          "type": "string"
        },
        "PolicyOriginalSaleDate": {
          "format": "date",
          "type": "string"
        },
        "policyStartDate": {
          "format": "date",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Premium": {
          "format": "double",
          "type": "number"
        },
        "primaryEmail": {
          "type": "string"
        },
        "QuoteDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateCreatedDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateEffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateReference": {
          "type": "string"
        },
        "QuoteMandateStatus": {
          "type": "string"
        },
        "QuoteRef": {
          "type": "string"
        },
        "QuoteStartedByAgentGroupName": {
          "type": "string"
        },
        "QuoteStartedBySalesPersonName": {
          "type": "string"
        },
        "RecalculationPending": {
          "type": "boolean"
        },
        "ReferredFromPage": {
          "type": "string"
        },
        "ReferredFromSite": {
          "type": "string"
        },
        "RefundOnlineWasAttempted": {
          "type": "boolean"
        },
        "RefundReason": {
          "type": "string"
        },
        "Registration": {
          "type": "string"
        },
        "ReinstatedDate": {
          "format": "date",
          "type": "string"
        },
        "ReinstatedQuoteRef": {
          "type": "string"
        },
        "ReinstatementForTypeOfCancellation": {
          "type": "string"
        },
        "ReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "RemainingPremium": {
          "format": "double",
          "type": "number"
        },
        "RENEWAL_COUNT": {
          "format": "double",
          "type": "number"
        },
        "RenewalBlocked": {
          "type": "boolean"
        },
        "RenewalRootQuoteRef": {
          "type": "string"
        },
        "RenewalType": {
          "type": "string"
        },
        "reqdNumberQs1PreQ": {
          "format": "double",
          "type": "number"
        },
        "reqdNumberQs2PreQ": {
          "format": "double",
          "type": "number"
        },
        "RequiresRefundOffline": {
          "type": "boolean"
        },
        "RootQuoteRef": {
          "type": "string"
        },
        "SaleCompletedByAgentGroupName": {
          "type": "string"
        },
        "SaleCompletedBySalesPersonEmail": {
          "type": "string"
        },
        "SaleCompletedBySalesPersonName": {
          "type": "string"
        },
        "SaleDate": {
          "format": "date",
          "type": "string"
        },
        "SalespersonEmail": {
          "type": "string"
        },
        "SalespersonName": {
          "type": "string"
        },
        "SalespersonPhone": {
          "type": "string"
        },
        "SalespersonReferralLevel": {
          "format": "double",
          "type": "number"
        },
        "SalespersonRefId": {
          "type": "string"
        },
        "SaleStage": {
          "type": "string",
          "enum": [
            "NotSet",
            "DeclineBeforeQuote",
            "AboutToQuickQuote",
            "QuickQuoteReferred",
            "QuickQuoteReferralRejected",
            "QuickQuoteReferralCleared",
            "QuickQuote",
            "AboutToQuote",
            "EndorsementsSelected",
            "Referred",
            "ReferralRejected",
            "ReferralCleared",
            "Quote",
            "DeclineOnPostQuote",
            "PaymentConfirmation",
            "AboutToPay",
            "PendingApproval",
            "Approved",
            "Declined",
            "PaymentFailed",
            "PaymentMade",
            "PolicyNumberGenerated",
            "Binder",
            "SaleComplete",
            "Expired",
            "NotTakenUp",
            "Lapsed",
            "CancelQuote",
            "CancelScheduled",
            "Cancelled",
            "CancelFromInception",
            "CancelFromRenewal",
            "CancelReinstated"
          ]
        },
        "SelectedCoverType": {
          "type": "string"
        },
        "SiteEnvironment": {
          "type": "string"
        },
        "SiteName": {
          "type": "string"
        },
        "SiteType": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "SumOfCoverTypes": {
          "format": "double",
          "type": "number"
        },
        "SumOfNumberQs": {
          "format": "double",
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "TotalPremium": {
          "format": "double",
          "type": "number"
        },
        "TransmissionCode": {
          "type": "string"
        },
        "TypeOfCancellation": {
          "type": "string"
        },
        "UnconfirmedRenewalChanges": {
          "type": "boolean"
        },
        "WasDeclined": {
          "type": "boolean"
        },
        "WasReferred": {
          "type": "boolean"
        },
        "WheelPlanCode": {
          "type": "string"
        },
        "YearOfManufacture": {
          "format": "double",
          "type": "number"
        },
        "InvoiceRef": {
          "type": "string"
        },
        "OriginalInvoiceRef": {
          "type": "string"
        },
        "InstalmentTotal": {
          "format": "double",
          "type": "number"
        },
        "GroupId": {
          "type": "string"
        },
        "GroupLinkId": {
          "type": "string"
        },
        "GroupQuoteRefActive": {
          "type": "string"
        },
        "CoverTypeAdd10": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd20": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd30": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "PetDetails": {
                "type": "string"
              },
              "PetId": {
                "format": "double",
                "type": "number"
              },
              "PetName": {
                "type": "string"
              }
            }
          }
        },
        "RunCalculations": {
          "type": "boolean"
        },
        "SendSaleCompleteEmailFromApi": {
          "type": "boolean"
        }
      }
    },
    "BindQuoteInput": {
      "type": "object",
      "properties": {
        "ABIGroup": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AgentCommission": {
          "format": "double",
          "type": "number"
        },
        "AgentDirectToQuoteOnLogin": {
          "type": "boolean"
        },
        "AgentGroupAddress1": {
          "type": "string"
        },
        "AgentGroupAddress2": {
          "type": "string"
        },
        "AgentGroupCountry": {
          "type": "string"
        },
        "AgentGroupCounty": {
          "type": "string"
        },
        "AgentGroupEmail": {
          "type": "string"
        },
        "AgentGroupName": {
          "type": "string"
        },
        "AgentGroupPostcode": {
          "type": "string"
        },
        "AgentGroupRefID": {
          "type": "string"
        },
        "AgentGroupTown": {
          "type": "string"
        },
        "AmountToRefundOffline": {
          "format": "double",
          "type": "number"
        },
        "BoltAltKey": {
          "type": "string"
        },
        "CancellationReason": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Claims_Count": {
          "format": "double",
          "type": "number"
        },
        "Colour": {
          "type": "string"
        },
        "CompanySanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "CompanySanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "CreatedFrom": {
          "type": "string",
          "enum": [
            "Unknown",
            "NewBusiness",
            "DetailChange",
            "Renewal",
            "MTA",
            "SelfRenewal",
            "Cancellation",
            "RenewalLapse"
          ]
        },
        "CreatedOn": {
          "format": "date",
          "type": "string"
        },
        "DeclineReason": {
          "type": "string"
        },
        "DetailChangedQuoteRef": {
          "type": "string"
        },
        "DocumentGeneratedDate": {
          "format": "date",
          "type": "string"
        },
        "DoorPlanCode": {
          "format": "double",
          "type": "number"
        },
        "EditedQuoteRef": {
          "type": "string"
        },
        "EngineCapacity": {
          "format": "double",
          "type": "number"
        },
        "FailedBoltQuoteCompletionAttempts": {
          "format": "double",
          "type": "number"
        },
        "FinalTotalCost": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionAmount": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionDate": {
          "format": "date",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "GrossVehicleWeight": {
          "format": "double",
          "type": "number"
        },
        "hiddenText": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "IndividualSanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "IsDetailChange": {
          "type": "boolean"
        },
        "IsMTA": {
          "type": "boolean"
        },
        "IsRenewal": {
          "type": "boolean"
        },
        "IsRenewalAllowedToLapse": {
          "type": "boolean"
        },
        "LapsedReason": {
          "type": "string"
        },
        "LastKnownClientUserId": {
          "format": "double",
          "type": "number"
        },
        "LastName": {
          "type": "string"
        },
        "LastRecurrentPaymentAmount": {
          "format": "double",
          "type": "number"
        },
        "LastRecurrentPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "LastRecurrentPaymentStatus": {
          "type": "string"
        },
        "Make": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "MTA_COUNT": {
          "format": "double",
          "type": "number"
        },
        "NextBoltQuoteCompletionAttemptDate": {
          "format": "date",
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "NotTakenUpReason": {
          "type": "string"
        },
        "NumberQ1": {
          "format": "double",
          "type": "number"
        },
        "OosMtaPremiumAdjustment": {
          "format": "double",
          "type": "number"
        },
        "OriginalQuoteRef": {
          "type": "string"
        },
        "OriginalReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "OriginatedFrom": {
          "type": "string"
        },
        "PetsMultiItem_Count": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem_IndexList": {
          "type": "string"
        },
        "policyEndDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyNumber": {
          "type": "string"
        },
        "policyStartDate": {
          "format": "date",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Premium": {
          "format": "double",
          "type": "number"
        },
        "primaryEmail": {
          "type": "string"
        },
        "QuoteDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteRef": {
          "type": "string"
        },
        "QuoteStartedByAgentGroupName": {
          "type": "string"
        },
        "QuoteStartedBySalesPersonName": {
          "type": "string"
        },
        "RecalculationPending": {
          "type": "boolean"
        },
        "ReferredFromPage": {
          "type": "string"
        },
        "ReferredFromSite": {
          "type": "string"
        },
        "RefundOnlineWasAttempted": {
          "type": "boolean"
        },
        "RefundReason": {
          "type": "string"
        },
        "Registration": {
          "type": "string"
        },
        "ReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "RENEWAL_COUNT": {
          "format": "double",
          "type": "number"
        },
        "RenewalBlocked": {
          "type": "boolean"
        },
        "RenewalRootQuoteRef": {
          "type": "string"
        },
        "RenewalType": {
          "type": "string"
        },
        "reqdNumberQs1PreQ": {
          "format": "double",
          "type": "number"
        },
        "reqdNumberQs2PreQ": {
          "format": "double",
          "type": "number"
        },
        "RequiresRefundOffline": {
          "type": "boolean"
        },
        "RootQuoteRef": {
          "type": "string"
        },
        "SalespersonEmail": {
          "type": "string"
        },
        "SalespersonName": {
          "type": "string"
        },
        "SalespersonPhone": {
          "type": "string"
        },
        "SalespersonReferralLevel": {
          "format": "double",
          "type": "number"
        },
        "SalespersonRefId": {
          "type": "string"
        },
        "SaleStage": {
          "type": "string",
          "enum": [
            "NotSet",
            "DeclineBeforeQuote",
            "AboutToQuickQuote",
            "QuickQuoteReferred",
            "QuickQuoteReferralRejected",
            "QuickQuoteReferralCleared",
            "QuickQuote",
            "AboutToQuote",
            "EndorsementsSelected",
            "Referred",
            "ReferralRejected",
            "ReferralCleared",
            "Quote",
            "DeclineOnPostQuote",
            "PaymentConfirmation",
            "AboutToPay",
            "PendingApproval",
            "Approved",
            "Declined",
            "PaymentFailed",
            "PaymentMade",
            "PolicyNumberGenerated",
            "Binder",
            "SaleComplete",
            "Expired",
            "NotTakenUp",
            "Lapsed",
            "CancelQuote",
            "CancelScheduled",
            "Cancelled",
            "CancelFromInception",
            "CancelFromRenewal",
            "CancelReinstated"
          ]
        },
        "SelectedCoverType": {
          "type": "string"
        },
        "SiteEnvironment": {
          "type": "string"
        },
        "SiteName": {
          "type": "string"
        },
        "SiteType": {
          "type": "string"
        },
        "SumOfCoverTypes": {
          "format": "double",
          "type": "number"
        },
        "SumOfNumberQs": {
          "format": "double",
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "TotalPremium": {
          "format": "double",
          "type": "number"
        },
        "TransmissionCode": {
          "type": "string"
        },
        "UnconfirmedRenewalChanges": {
          "type": "boolean"
        },
        "WasDeclined": {
          "type": "boolean"
        },
        "WasReferred": {
          "type": "boolean"
        },
        "WheelPlanCode": {
          "type": "string"
        },
        "YearOfManufacture": {
          "format": "double",
          "type": "number"
        },
        "BankName": {
          "type": "string"
        },
        "BankAddress": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "AccountHolderName": {
          "type": "string"
        },
        "CollectionDay": {
          "format": "double",
          "type": "number"
        },
        "InvoiceRef": {
          "type": "string"
        },
        "OriginalInvoiceRef": {
          "type": "string"
        },
        "PolicyNumberSuffixed": {
          "type": "string"
        },
        "SaleDate": {
          "format": "date",
          "type": "string"
        },
        "SaleCompletedBySalesPersonName": {
          "type": "string"
        },
        "SaleCompletedBySalesPersonEmail": {
          "type": "string"
        },
        "SaleCompletedByAgentGroupName": {
          "type": "string"
        },
        "OriginalSaleCompletedBySalesPersonName": {
          "type": "string"
        },
        "OriginalSaleCompletedBySalesPersonEmail": {
          "type": "string"
        },
        "OriginalSaleCompletedByAgentGroupName": {
          "type": "string"
        },
        "PaymentType": {
          "type": "string"
        },
        "ClaimDescription": {
          "type": "string"
        },
        "ClaimInsurerRef": {
          "type": "string"
        },
        "ClaimStatus": {
          "type": "string"
        },
        "ClaimLossDate": {
          "format": "date",
          "type": "string"
        },
        "ClaimDate": {
          "format": "date",
          "type": "string"
        },
        "ClaimLossType": {
          "type": "string"
        },
        "ClaimPaid": {
          "format": "double",
          "type": "number"
        },
        "ClaimReserve": {
          "format": "double",
          "type": "number"
        },
        "ClaimOutstanding": {
          "format": "double",
          "type": "number"
        },
        "HasDied": {
          "type": "boolean"
        },
        "RemainingPremium": {
          "format": "double",
          "type": "number"
        },
        "OriginalPolicyStartDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyOriginalSaleDate": {
          "format": "date",
          "type": "string"
        },
        "CancelledDate": {
          "format": "date",
          "type": "string"
        },
        "BinderIssueDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateReference": {
          "type": "string"
        },
        "PolicyLatestMandateStatus": {
          "type": "string"
        },
        "PolicyLatestMandateCreatedDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateEffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateReference": {
          "type": "string"
        },
        "QuoteMandateStatus": {
          "type": "string"
        },
        "QuoteMandateCreatedDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateEffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "InstalmentTotal": {
          "format": "double",
          "type": "number"
        },
        "CancellationQuoteDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationCreatedOnDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationConfirmedDate": {
          "format": "date",
          "type": "string"
        },
        "CancelledQuoteRef": {
          "type": "string"
        },
        "TypeOfCancellation": {
          "type": "string"
        },
        "ReinstatementForTypeOfCancellation": {
          "type": "string"
        },
        "IsCancelled": {
          "type": "boolean"
        },
        "PaymentStatusDescription": {
          "type": "string"
        },
        "PaymentStatusAttemptedOn": {
          "type": "string"
        },
        "PaymentStatusAmountDue": {
          "type": "string"
        },
        "CustomerRef": {
          "type": "string"
        },
        "IsReinstatement": {
          "type": "boolean"
        },
        "ReinstatedQuoteRef": {
          "type": "string"
        },
        "ReinstatedDate": {
          "format": "date",
          "type": "string"
        },
        "GroupId": {
          "type": "string"
        },
        "GroupLinkId": {
          "type": "string"
        },
        "GroupQuoteRefActive": {
          "type": "string"
        },
        "EffectiveChangeDate": {
          "format": "date",
          "type": "string"
        },
        "CoverTypeAdd10": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd20": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd30": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "PetDetails": {
                "type": "string"
              },
              "PetId": {
                "format": "double",
                "type": "number"
              },
              "PetName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "StartRenewalInput": {
      "type": "object",
      "properties": {
        "ABIGroup": {
          "type": "string"
        },
        "AccountHolderName": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AgentCommission": {
          "format": "double",
          "type": "number"
        },
        "AgentDirectToQuoteOnLogin": {
          "type": "boolean"
        },
        "AgentGroupAddress1": {
          "type": "string"
        },
        "AgentGroupAddress2": {
          "type": "string"
        },
        "AgentGroupCountry": {
          "type": "string"
        },
        "AgentGroupCounty": {
          "type": "string"
        },
        "AgentGroupEmail": {
          "type": "string"
        },
        "AgentGroupName": {
          "type": "string"
        },
        "AgentGroupPostcode": {
          "type": "string"
        },
        "AgentGroupRefID": {
          "type": "string"
        },
        "AgentGroupTown": {
          "type": "string"
        },
        "AmountToRefundOffline": {
          "format": "double",
          "type": "number"
        },
        "BankAddress": {
          "type": "string"
        },
        "BankName": {
          "type": "string"
        },
        "BinderIssueDate": {
          "format": "date",
          "type": "string"
        },
        "BoltAltKey": {
          "type": "string"
        },
        "CancellationConfirmedDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationCreatedOnDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationQuoteDate": {
          "format": "date",
          "type": "string"
        },
        "CancellationReason": {
          "type": "string"
        },
        "CancelledDate": {
          "format": "date",
          "type": "string"
        },
        "CancelledQuoteRef": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "ClaimDate": {
          "format": "date",
          "type": "string"
        },
        "ClaimDescription": {
          "type": "string"
        },
        "ClaimInsurerRef": {
          "type": "string"
        },
        "ClaimLossDate": {
          "format": "date",
          "type": "string"
        },
        "ClaimLossType": {
          "type": "string"
        },
        "ClaimOutstanding": {
          "format": "double",
          "type": "number"
        },
        "ClaimPaid": {
          "format": "double",
          "type": "number"
        },
        "ClaimReserve": {
          "format": "double",
          "type": "number"
        },
        "Claims_Count": {
          "format": "double",
          "type": "number"
        },
        "ClaimStatus": {
          "type": "string"
        },
        "CollectionDay": {
          "format": "double",
          "type": "number"
        },
        "Colour": {
          "type": "string"
        },
        "CompanySanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "CompanySanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "CreatedFrom": {
          "type": "string",
          "enum": [
            "Unknown",
            "NewBusiness",
            "DetailChange",
            "Renewal",
            "MTA",
            "SelfRenewal",
            "Cancellation",
            "RenewalLapse"
          ]
        },
        "CreatedOn": {
          "format": "date",
          "type": "string"
        },
        "CustomerRef": {
          "type": "string"
        },
        "DeclineReason": {
          "type": "string"
        },
        "DetailChangedQuoteRef": {
          "type": "string"
        },
        "DocumentGeneratedDate": {
          "format": "date",
          "type": "string"
        },
        "DoorPlanCode": {
          "format": "double",
          "type": "number"
        },
        "EditedQuoteRef": {
          "type": "string"
        },
        "EngineCapacity": {
          "format": "double",
          "type": "number"
        },
        "FailedBoltQuoteCompletionAttempts": {
          "format": "double",
          "type": "number"
        },
        "FinalTotalCost": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionAmount": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionDate": {
          "format": "date",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "GrossVehicleWeight": {
          "format": "double",
          "type": "number"
        },
        "HasDied": {
          "type": "boolean"
        },
        "hiddenText": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "IndividualSanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "IsCancelled": {
          "type": "boolean"
        },
        "IsDetailChange": {
          "type": "boolean"
        },
        "IsMTA": {
          "type": "boolean"
        },
        "IsReinstatement": {
          "type": "boolean"
        },
        "IsRenewal": {
          "type": "boolean"
        },
        "IsRenewalAllowedToLapse": {
          "type": "boolean"
        },
        "LapsedReason": {
          "type": "string"
        },
        "LastKnownClientUserId": {
          "format": "double",
          "type": "number"
        },
        "LastName": {
          "type": "string"
        },
        "LastRecurrentPaymentAmount": {
          "format": "double",
          "type": "number"
        },
        "LastRecurrentPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "LastRecurrentPaymentStatus": {
          "type": "string"
        },
        "Make": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "MTA_COUNT": {
          "format": "double",
          "type": "number"
        },
        "NextBoltQuoteCompletionAttemptDate": {
          "format": "date",
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "NotTakenUpReason": {
          "type": "string"
        },
        "NumberQ1": {
          "format": "double",
          "type": "number"
        },
        "OosMtaPremiumAdjustment": {
          "format": "double",
          "type": "number"
        },
        "OriginalPolicyStartDate": {
          "format": "date",
          "type": "string"
        },
        "OriginalQuoteRef": {
          "type": "string"
        },
        "OriginalReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "OriginalSaleCompletedByAgentGroupName": {
          "type": "string"
        },
        "OriginalSaleCompletedBySalesPersonEmail": {
          "type": "string"
        },
        "OriginalSaleCompletedBySalesPersonName": {
          "type": "string"
        },
        "OriginatedFrom": {
          "type": "string"
        },
        "PaymentStatusAmountDue": {
          "type": "string"
        },
        "PaymentStatusAttemptedOn": {
          "type": "string"
        },
        "PaymentStatusDescription": {
          "type": "string"
        },
        "PaymentType": {
          "type": "string"
        },
        "PetsMultiItem_Count": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem_IndexList": {
          "type": "string"
        },
        "policyEndDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateCreatedDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateEffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyLatestMandateReference": {
          "type": "string"
        },
        "PolicyLatestMandateStatus": {
          "type": "string"
        },
        "PolicyNumber": {
          "type": "string"
        },
        "PolicyNumberSuffixed": {
          "type": "string"
        },
        "PolicyOriginalSaleDate": {
          "format": "date",
          "type": "string"
        },
        "policyStartDate": {
          "format": "date",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Premium": {
          "format": "double",
          "type": "number"
        },
        "primaryEmail": {
          "type": "string"
        },
        "QuoteDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateCreatedDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateEffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteMandateReference": {
          "type": "string"
        },
        "QuoteMandateStatus": {
          "type": "string"
        },
        "QuoteRef": {
          "type": "string"
        },
        "QuoteStartedByAgentGroupName": {
          "type": "string"
        },
        "QuoteStartedBySalesPersonName": {
          "type": "string"
        },
        "RecalculationPending": {
          "type": "boolean"
        },
        "ReferredFromPage": {
          "type": "string"
        },
        "ReferredFromSite": {
          "type": "string"
        },
        "RefundOnlineWasAttempted": {
          "type": "boolean"
        },
        "RefundReason": {
          "type": "string"
        },
        "Registration": {
          "type": "string"
        },
        "ReinstatedDate": {
          "format": "date",
          "type": "string"
        },
        "ReinstatedQuoteRef": {
          "type": "string"
        },
        "ReinstatementForTypeOfCancellation": {
          "type": "string"
        },
        "ReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "RemainingPremium": {
          "format": "double",
          "type": "number"
        },
        "RENEWAL_COUNT": {
          "format": "double",
          "type": "number"
        },
        "RenewalBlocked": {
          "type": "boolean"
        },
        "RenewalRootQuoteRef": {
          "type": "string"
        },
        "RenewalType": {
          "type": "string"
        },
        "reqdNumberQs1PreQ": {
          "format": "double",
          "type": "number"
        },
        "reqdNumberQs2PreQ": {
          "format": "double",
          "type": "number"
        },
        "RequiresRefundOffline": {
          "type": "boolean"
        },
        "RootQuoteRef": {
          "type": "string"
        },
        "SaleCompletedByAgentGroupName": {
          "type": "string"
        },
        "SaleCompletedBySalesPersonEmail": {
          "type": "string"
        },
        "SaleCompletedBySalesPersonName": {
          "type": "string"
        },
        "SaleDate": {
          "format": "date",
          "type": "string"
        },
        "SalespersonEmail": {
          "type": "string"
        },
        "SalespersonName": {
          "type": "string"
        },
        "SalespersonPhone": {
          "type": "string"
        },
        "SalespersonReferralLevel": {
          "format": "double",
          "type": "number"
        },
        "SalespersonRefId": {
          "type": "string"
        },
        "SaleStage": {
          "type": "string",
          "enum": [
            "NotSet",
            "DeclineBeforeQuote",
            "AboutToQuickQuote",
            "QuickQuoteReferred",
            "QuickQuoteReferralRejected",
            "QuickQuoteReferralCleared",
            "QuickQuote",
            "AboutToQuote",
            "EndorsementsSelected",
            "Referred",
            "ReferralRejected",
            "ReferralCleared",
            "Quote",
            "DeclineOnPostQuote",
            "PaymentConfirmation",
            "AboutToPay",
            "PendingApproval",
            "Approved",
            "Declined",
            "PaymentFailed",
            "PaymentMade",
            "PolicyNumberGenerated",
            "Binder",
            "SaleComplete",
            "Expired",
            "NotTakenUp",
            "Lapsed",
            "CancelQuote",
            "CancelScheduled",
            "Cancelled",
            "CancelFromInception",
            "CancelFromRenewal",
            "CancelReinstated"
          ]
        },
        "SelectedCoverType": {
          "type": "string"
        },
        "SiteEnvironment": {
          "type": "string"
        },
        "SiteName": {
          "type": "string"
        },
        "SiteType": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "SumOfCoverTypes": {
          "format": "double",
          "type": "number"
        },
        "SumOfNumberQs": {
          "format": "double",
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "TotalPremium": {
          "format": "double",
          "type": "number"
        },
        "TransmissionCode": {
          "type": "string"
        },
        "TypeOfCancellation": {
          "type": "string"
        },
        "UnconfirmedRenewalChanges": {
          "type": "boolean"
        },
        "WasDeclined": {
          "type": "boolean"
        },
        "WasReferred": {
          "type": "boolean"
        },
        "WheelPlanCode": {
          "type": "string"
        },
        "YearOfManufacture": {
          "format": "double",
          "type": "number"
        },
        "InvoiceRef": {
          "type": "string"
        },
        "OriginalInvoiceRef": {
          "type": "string"
        },
        "InstalmentTotal": {
          "format": "double",
          "type": "number"
        },
        "GroupId": {
          "type": "string"
        },
        "GroupLinkId": {
          "type": "string"
        },
        "GroupQuoteRefActive": {
          "type": "string"
        },
        "CoverTypeAdd10": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd20": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd30": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "PetDetails": {
                "type": "string"
              },
              "PetId": {
                "format": "double",
                "type": "number"
              },
              "PetName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CancelPolicyInput": {
      "type": "object",
      "properties": {
        "CancelledDate": {
          "type": "string"
        },
        "CancellationReason": {
          "type": "string"
        }
      }
    },
    "QuoteAndPolicyDataOutput": {
      "type": "object",
      "properties": {
        "ABIGroup": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AgentCommission": {
          "format": "double",
          "type": "number"
        },
        "AgentDirectToQuoteOnLogin": {
          "type": "boolean"
        },
        "AgentGroupAddress1": {
          "type": "string"
        },
        "AgentGroupAddress2": {
          "type": "string"
        },
        "AgentGroupCountry": {
          "type": "string"
        },
        "AgentGroupCounty": {
          "type": "string"
        },
        "AgentGroupEmail": {
          "type": "string"
        },
        "AgentGroupName": {
          "type": "string"
        },
        "AgentGroupPostcode": {
          "type": "string"
        },
        "AgentGroupRefID": {
          "type": "string"
        },
        "AgentGroupTown": {
          "type": "string"
        },
        "AmountToRefundOffline": {
          "format": "double",
          "type": "number"
        },
        "BoltAltKey": {
          "type": "string"
        },
        "CancellationReason": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Claims_Count": {
          "format": "double",
          "type": "number"
        },
        "Colour": {
          "type": "string"
        },
        "CompanySanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "CompanySanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "CompanySanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "CreatedFrom": {
          "type": "string",
          "enum": [
            "Unknown",
            "NewBusiness",
            "DetailChange",
            "Renewal",
            "MTA",
            "SelfRenewal",
            "Cancellation",
            "RenewalLapse"
          ]
        },
        "CreatedOn": {
          "format": "date",
          "type": "string"
        },
        "DeclineReason": {
          "type": "string"
        },
        "DetailChangedQuoteRef": {
          "type": "string"
        },
        "DocumentGeneratedDate": {
          "format": "date",
          "type": "string"
        },
        "DoorPlanCode": {
          "format": "double",
          "type": "number"
        },
        "EditedQuoteRef": {
          "type": "string"
        },
        "EngineCapacity": {
          "format": "double",
          "type": "number"
        },
        "FailedBoltQuoteCompletionAttempts": {
          "format": "double",
          "type": "number"
        },
        "FinalTotalCost": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionAmount": {
          "format": "double",
          "type": "number"
        },
        "FirstCollectionDate": {
          "format": "date",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "GrossVehicleWeight": {
          "format": "double",
          "type": "number"
        },
        "hiddenText": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerError": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsCheckerScore": {
          "format": "double",
          "type": "number"
        },
        "IndividualSanctionsSearchResultAtPayment": {
          "type": "string"
        },
        "IndividualSanctionsSearchResultAtQuickQuote": {
          "type": "string"
        },
        "IsDetailChange": {
          "type": "boolean"
        },
        "IsMTA": {
          "type": "boolean"
        },
        "IsRenewal": {
          "type": "boolean"
        },
        "IsRenewalAllowedToLapse": {
          "type": "boolean"
        },
        "LapsedReason": {
          "type": "string"
        },
        "LastKnownClientUserId": {
          "format": "double",
          "type": "number"
        },
        "LastName": {
          "type": "string"
        },
        "LastRecurrentPaymentAmount": {
          "format": "double",
          "type": "number"
        },
        "LastRecurrentPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "LastRecurrentPaymentStatus": {
          "type": "string"
        },
        "Make": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "MTA_COUNT": {
          "format": "double",
          "type": "number"
        },
        "NextBoltQuoteCompletionAttemptDate": {
          "format": "date",
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "NotTakenUpReason": {
          "type": "string"
        },
        "NumberQ1": {
          "format": "double",
          "type": "number"
        },
        "OosMtaPremiumAdjustment": {
          "format": "double",
          "type": "number"
        },
        "OriginalQuoteRef": {
          "type": "string"
        },
        "OriginalReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "OriginatedFrom": {
          "type": "string"
        },
        "PetsMultiItem_Count": {
          "format": "double",
          "type": "number"
        },
        "PetsMultiItem_IndexList": {
          "type": "string"
        },
        "policyEndDate": {
          "format": "date",
          "type": "string"
        },
        "PolicyNumber": {
          "type": "string"
        },
        "policyStartDate": {
          "format": "date",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Premium": {
          "format": "double",
          "type": "number"
        },
        "primaryEmail": {
          "type": "string"
        },
        "QuoteDate": {
          "format": "date",
          "type": "string"
        },
        "QuoteRef": {
          "type": "string",
		  "required": true
        },
        "QuoteStartedByAgentGroupName": {
          "type": "string"
        },
        "QuoteStartedBySalesPersonName": {
          "type": "string"
        },
        "RecalculationPending": {
          "type": "boolean"
        },
        "ReferredFromPage": {
          "type": "string"
        },
        "ReferredFromSite": {
          "type": "string"
        },
        "RefundOnlineWasAttempted": {
          "type": "boolean"
        },
        "RefundReason": {
          "type": "string"
        },
        "Registration": {
          "type": "string"
        },
        "ReleaseDate": {
          "format": "date",
          "type": "string"
        },
        "RENEWAL_COUNT": {
          "format": "double",
          "type": "number"
        },
        "RenewalBlocked": {
          "type": "boolean"
        },
        "RenewalRootQuoteRef": {
          "type": "string"
        },
        "RenewalType": {
          "type": "string"
        },
        "reqdNumberQs1PreQ": {
          "format": "double",
          "type": "number"
        },
        "reqdNumberQs2PreQ": {
          "format": "double",
          "type": "number"
        },
        "RequiresRefundOffline": {
          "type": "boolean"
        },
        "RootQuoteRef": {
          "type": "string"
        },
        "SalespersonEmail": {
          "type": "string"
        },
        "SalespersonName": {
          "type": "string"
        },
        "SalespersonPhone": {
          "type": "string"
        },
        "SalespersonReferralLevel": {
          "format": "double",
          "type": "number"
        },
        "SalespersonRefId": {
          "type": "string"
        },
        "SaleStage": {
          "type": "string",
          "enum": [
            "NotSet",
            "DeclineBeforeQuote",
            "AboutToQuickQuote",
            "QuickQuoteReferred",
            "QuickQuoteReferralRejected",
            "QuickQuoteReferralCleared",
            "QuickQuote",
            "AboutToQuote",
            "EndorsementsSelected",
            "Referred",
            "ReferralRejected",
            "ReferralCleared",
            "Quote",
            "DeclineOnPostQuote",
            "PaymentConfirmation",
            "AboutToPay",
            "PendingApproval",
            "Approved",
            "Declined",
            "PaymentFailed",
            "PaymentMade",
            "PolicyNumberGenerated",
            "Binder",
            "SaleComplete",
            "Expired",
            "NotTakenUp",
            "Lapsed",
            "CancelQuote",
            "CancelScheduled",
            "Cancelled",
            "CancelFromInception",
            "CancelFromRenewal",
            "CancelReinstated"
          ]
        },
        "SelectedCoverType": {
          "type": "string"
        },
        "SiteEnvironment": {
          "type": "string"
        },
        "SiteName": {
          "type": "string"
        },
        "SiteType": {
          "type": "string"
        },
        "SumOfCoverTypes": {
          "format": "double",
          "type": "number"
        },
        "SumOfNumberQs": {
          "format": "double",
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "TotalPremium": {
          "format": "double",
          "type": "number"
        },
        "TransmissionCode": {
          "type": "string"
        },
        "UnconfirmedRenewalChanges": {
          "type": "boolean"
        },
        "WasDeclined": {
          "type": "boolean"
        },
        "WasReferred": {
          "type": "boolean"
        },
        "WheelPlanCode": {
          "type": "string"
        },
        "YearOfManufacture": {
          "format": "double",
          "type": "number"
        },
        "CoverTypeAdd10ToPremiumVariable": {
          "type": "object",
          "properties": {
            "CoverTypeAdd10": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "CoverTypeAdd20ToPremiumVariable": {
          "type": "object",
          "properties": {
            "CoverTypeAdd20": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "CoverTypeAdd30ToPremiumVariable": {
          "type": "object",
          "properties": {
            "CoverTypeAdd30": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "PetsMultiItem": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "PetId": {
                "format": "double",
                "type": "number"
              },
              "PetName": {
                "type": "string",
				"required": true
              },
              "PetsMultiItem_Index": {
                "format": "double",
                "type": "number"
              },
              "Position": {
                "format": "double",
                "type": "number",
				"required": true
              }
            }
          }
        },
        "PdfBuilderWithCoverTypes.pdf": {
          "type": "string",
          "format": "url"
        },
        "Ihr Angebot - Betriebshaftpflichtversicherung (7).pdf.pdf": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "QuoteOrPolicyDataOutput": {
      "type": "object",
      "properties": {
        "PolicyNumber": {
          "type": "string"
        }
      }
    },
    "UpdateClaimDataInput": {
      "type": "object",
      "properties": {}
    },
    "recordPaymentInput": {
      "type": "object",
      "properties": {
        "InstandaInstalmentRef": {
          "type": "string"
        },
        "InvoiceRef": {
          "type": "string"
        },
        "TransactionDate": {
          "format": "date",
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Status": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Tax": {
          "format": "double",
          "type": "number"
        },
        "ExternalRef": {
          "type": "string"
        }
      }
    },
    "UploadExternalDocumentInput": {
      "type": "object",
      "properties": {
        "FileContent": {
          "type": "string"
        }
      }
    }
  }
}                     